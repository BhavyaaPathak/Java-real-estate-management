/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Government;
import Business.Network.Network;
import Business.Network.NetworkDirectory;
import Business.Organization.Organization;
import Business.Role.Role;
import java.awt.CardLayout;
import java.util.Properties;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author kanikamakhija
 */
public class RequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestJPanel
     */
     private NetworkDirectory networkDirectory;
    private JPanel userProcessContainer;
    private Government system;
    public RequestJPanel(JPanel userProcessContainer, Government system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtsubject = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtmessage = new javax.swing.JTextArea();
        sendBtn = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 46, -1, -1));

        jLabel2.setText("Email:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 130, -1, -1));

        jLabel3.setText("Please write your oreferred Network (City) and Enterprise (Real Estate / Maintenance)");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 550, 30));

        jLabel4.setText("Message:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(294, 235, -1, -1));

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 130, 127, -1));
        add(txtsubject, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 189, 127, -1));

        txtmessage.setColumns(20);
        txtmessage.setRows(5);
        jScrollPane1.setViewportView(txtmessage);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 235, 418, 248));

        sendBtn.setText("Send");
        sendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });
        add(sendBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 495, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed
   
     
      
    private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed
        // TODO add your handling code here:
        
      
        
        try {
            String email = txtEmail.getText();
            String msg = txtEmail.getText() + "\n" +txtmessage.getText();
            String subject = txtsubject.getText();
//            Enterprise enterprise = (Enterprise) enterpriseTypeJComboBox.getSelectedItem();
//            Network network = (Network) networkJComboBox.getSelectedItem();
            if (!msg.isEmpty()&&!subject.isEmpty()&&!email.isEmpty()) {
                
                try{
                 if(validateEmail()==true){
                 emailrequest(email,msg,subject);
//                  userProcessContainer.remove(this);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.previous(userProcessContainer);
                 txtEmail.setText("");
                 txtmessage.setText("");
                 txtsubject.setText("");
                 }   
                 else{
                                   throw new Exception();
  
                 }
                 
                }
                catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter your gmail id");

               
            } 
            
        } 
            else {
                throw new Exception();
            }
        }
            catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Fields cannot be left blank ", "Warning", JOptionPane.WARNING_MESSAGE);
        }     
        
    }//GEN-LAST:event_sendBtnActionPerformed

    public static void emailrequest(String email,String msg,String subject){
     String to = "codeblueecocystem@gmail.com";//change accordingly  
        String from = "bhavya.pathak29@gmail.com"  ;//change accordingly  

//        final String username =  email;
//        final String password = pswd;
        //Get the session object  
        final String username = "bhavya.pathak29@gmail.com";
        final String password = "bppp0605";
        Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");
                
        Session session  = Session.getInstance(props,
                new javax.mail.Authenticator() {
                    protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
                        return new javax.mail.PasswordAuthentication(username, password);
                    }
                });

        //compose the message  
        try {
            MimeMessage message = new MimeMessage(session);
            message.setFrom(new InternetAddress(from));
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
            message.setSubject(subject);
            message.setText(msg);

            // Send message  
            Transport.send(message);
            System.out.println("message sent successfully....");

        } catch (MessagingException mex) {
            mex.printStackTrace();
        }   
    }
public boolean validateEmail() {
        Pattern pattern = Pattern.compile("^[\\w.+\\-]+@gmail\\.com$", Pattern.CASE_INSENSITIVE);
        Matcher matcher = pattern.matcher(txtEmail.getText());
        return matcher.find();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton sendBtn;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextArea txtmessage;
    private javax.swing.JTextField txtsubject;
    // End of variables declaration//GEN-END:variables
}
